<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Senai.Gufi.WebApi</name>
    </assembly>
    <members>
        <member name="F:Senai.Gufi.WebApi.Controllers.EventoController._eventoRepository">
            <summary>
            Cria um objeto _eventosRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.Get">
            <summary>
            Lista todos os eventos
            </summary>
            <returns>Uma lista de eventos e um status code 200 - Ok</returns>
            dominio/api/Evento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.GetById(System.Int32)">
            <summary>
            Busca um evento através do seu ID
            </summary>
            <param name="id">ID do evento que será buscado</param>
            <returns>Um evento buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/Evento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.Post(Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Cadastra um novo evento
            </summary>
            <param name="novoEvento">Objeto novoEvento que será cadastrado</param>
            <returns>Os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/Evento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.Put(System.Int32,Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Atualiza um evento existente
            </summary>
            <param name="id">ID do evento que será atualizado</param>
            <param name="eventoAtualizado">Objeto eventoAtualizado que será alterado</param>
            <returns>Retorna um status code</returns>
            dominio/api/Evento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.Delete(System.Int32)">
            <summary>
            Deleta um evento
            </summary>
            <param name="id">ID do evento que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/Evento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.EventoController.GetEvento">
            <summary>
            Lista todos os eventos com as presencas
            </summary>
            <returns>Uma lista de eventos</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Controllers.InstituicaoController._instituicaoRepository">
            <summary>
            Cria um objeto _instituicaoRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.Get">
            <summary>
            Lista todas as instituicoes
            </summary>
            <returns>Uma lista de instituicoes e um status code 200 - Ok</returns>
            dominio/api/Instituicao
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.GetById(System.Int32)">
            <summary>
            Busca uma  através do seu ID
            </summary>
            <param name="id">ID da instituicao que será buscada</param>
            <returns>Uma instituicao buscada ou NotFound caso nenhuma seja encontrado</returns>
            dominio/api/Instituicao/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.Post(Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Cadastra uma nova instituicao
            </summary>
            <param name="novaInstituicao">Objeto novaInstituicao que será cadastrada</param>
            <returns>Os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/Instituicao
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.Put(System.Int32,Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Atualiza uma instituicao existente
            </summary>
            <param name="id">ID da instituicao que será atualizado</param>
            <param name="instituicaoAtualizada">Objeto instituicaoAtualizada que será alterado</param>
            <returns>Retorna um status code</returns>
            dominio/api/Instituicao/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.InstituicaoController.Delete(System.Int32)">
            <summary>
            Deleta uma instituicao
            </summary>
            <param name="id">ID da instituicao que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/Instituicao/1
        </member>
        <member name="P:Senai.Gufi.WebApi.Controllers.LoginController._usuarioRepository">
            <summary>
            Cria um objeto _usuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.LoginController.#ctor">
            <summary>
            Cria um objeto _usuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.LoginController.Post(Senai.Gufi.WebApi.ViewModels.LoginViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Controllers.PresencaController._presencaRepository">
            <summary>
            Cria um objeto _presencaRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.Get">
            <summary>
            Lista todos as presencas
            </summary>
            <returns>Uma lista de presencas e um status code 200 - Ok</returns>
            dominio/api/Presenca
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.GetById(System.Int32)">
            <summary>
            Busca uma  através do seu ID
            </summary>
            <param name="id">ID da presenca que será buscada</param>
            <returns>Uma presenca buscada ou NotFound caso nenhuma seja encontrado</returns>
            dominio/api/Presenca/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.GetMy">
            <summary>
            Lista todos as presenças de um determinado usuário
            </summary>
            <returns>Uma lista de presenças e um status code 200 - Ok</returns>
            <response code="200">Retorna uma lista de presenças de um determinado usuário</response>
            <response code="400">Retorna o erro gerado com uma mensagem personalizada</response>
            dominio/api/Presencas/Minhas
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.Put(System.Int32,Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Altera o status de uma presença
            </summary>
            <param name="id">ID da presença que terá a situação alterada</param>
            <param name="status">Objeto com o parâmetro que atualiza o situação da presença para Confirmada, Não confirmada ou Recusada</param>
            <returns>Um status code 204 - No Content</returns>
            <response code="204">Retorna apenas o status code No Content</response>
            <response code="400">Retorna o erro gerado</response>
            dominio/api/Presencas/id
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.Invite(Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Convida um usuário para um evento
            </summary>
            <param name="convite">Objeto com as informações da nova presença</param>
            <returns>Um status code 201 - Created</returns>
            <response code="201">Retorna apenas o status code Created</response>
            <response code="400">Retorna o erro gerado</response>
            dominio/api/Presencas/Convidar
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.Join(System.Int32)">
            <summary>
            Inscreve o usuário logado em um evento
            </summary>
            <param name="idEvento">ID do evento que o usuário irá se inscrever</param>
            <returns>Um status code 201 - Created</returns>
            <response code="201">Retorna apenas o status code Created</response>
            <response code="400">Retorna o erro gerado com uma mensagem personalizada</response>
            dominio/api/Presencas/Inscricao/idEvento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.PresencaController.Delete(System.Int32)">
            <summary>
            Deleta uma presenca
            </summary>
            <param name="id">ID da presenca que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/Presenca/1
        </member>
        <member name="F:Senai.Gufi.WebApi.Controllers.TiposEventoController._tipoEventoRepository">
            <summary>
            Cria um objeto _tipoEventoRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.Get">
            <summary>
            Lista todos os tipos eventos
            </summary>
            <returns>Uma lista de tipos eventos e um status code 200 - Ok</returns>
            dominio/api/TipoEvento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.GetById(System.Int32)">
            <summary>
            Busca um tipo evento através do seu ID
            </summary>
            <param name="id">ID do tipo evento que será buscado</param>
            <returns>Um tipo evento buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/TipoEvento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.Post(Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Cadastra um novo tipo evento
            </summary>
            <param name="novoTipoEvento">Objeto novoTipoEvento que será cadastrado</param>
            <returns>Os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/TipoEvento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.Put(System.Int32,Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo evento existente
            </summary>
            <param name="id">ID do tipo evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto tipoEventoAtualizado que será alterado</param>
            <returns>Retorna um status code</returns>
            dominio/api/TipoEvento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.Delete(System.Int32)">
            <summary>
            Deleta um tipoEvento
            </summary>
            <param name="id">ID do tipoEvento que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/TipoEvento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TiposEventoController.GetTipoEvento">
            <summary>
            Lista todos os tipos evento com os eventos
            </summary>
            <returns>Uma lista de tipos evento</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Controllers.TipoUsuarioController._tipoUsuarioRepository">
            <summary>
            Cria um objeto _tipoUsuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.Get">
            <summary>
            Lista todos os tipos usuarios
            </summary>
            <returns>Uma lista de tipos usuarios e um status code 200 - Ok</returns>
            dominio/api/TipoUsuario
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.GetById(System.Int32)">
            <summary>
            Busca um tipo usuario através do seu ID
            </summary>
            <param name="id">ID do tipo usuario que será buscado</param>
            <returns>Um tipo usuario buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/TipoUsuario/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.Post(Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Cadastra um novo tipo usuario
            </summary>
            <param name="novoTipoUsuario">Objeto novoTipoUsuario que será cadastrado</param>
            <returns>Os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/TipoUsuario
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.Put(System.Int32,Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Atualiza um tipo usuario existente
            </summary>
            <param name="id">ID do tipo usuario que será atualizado</param>
            <param name="tipoUsuarioAtualizado">Objeto tipoUsuarioAtualizado que será alterado</param>
            <returns>Retorna um status code</returns>
            dominio/api/TipoUsuario/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um tipousuario
            </summary>
            <param name="id">ID do tipoUsuario que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/TipoUsuario/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.TipoUsuarioController.GetTipoUsuario">
            <summary>
            Lista todos os tipos usuario com os usuarios
            </summary>
            <returns>Uma lista de tipos usuarios</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Controllers.UsuarioController._usuarioRepository">
            <summary>
            Cria um objeto _usuariosRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.Get">
            <summary>
            Lista todos os usuarios
            </summary>
            <returns>Uma lista de usuarios e um status code 200 - Ok</returns>
            dominio/api/Usuario
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Busca um usuario através do seu ID
            </summary>
            <param name="id">ID do usuario que será buscado</param>
            <returns>Um usuario buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/Usuario/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.Post(Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="novousuario">Objeto novousuario que será cadastrado</param>
            <returns>Os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/Evento
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.Put(System.Int32,Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Atualiza um usuario existente
            </summary>
            <param name="id">ID do usuario que será atualizado</param>
            <param name="usuarioAtualizado">Objeto usuarioAtualizado que será alterado</param>
            <returns>Retorna um status code</returns>
            dominio/api/Usuario/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um usuario
            </summary>
            <param name="id">ID do usuario que será deletado</param>
            <returns>Um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/Evento/1
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.GetTipoEvento">
            <summary>
            Lista todos os usuarios com os tipos usuario
            </summary>
            <returns>Uma lista de usuarios</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Controllers.UsuarioController.GetPresenca">
            <summary>
            Lista todos os usuarios com as presencas
            </summary>
            <returns>Uma lista de usuarios</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.Listar">
            <summary>
            Lista todos os eventos
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um evento pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Cadastra um novo evento
            </summary>
            <param name="novoEvento">Objeto novoEvento que será cadastrado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Atualiza um evento existente
            </summary>
            <param name="id"></param>
            <param name="eventoAtualizado"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um evento
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IEventoRepository.ListarComPresenca">
            <summary>
            Lista todos os eventos com as informações das presencas
            </summary>
            <returns>Uma lista de eventos com as presencas</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IInstituicaoRepository.Listar">
            <summary>
            Lista todas as instituições
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IInstituicaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma instituição pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IInstituicaoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Cadastra uma nova instituicao
            </summary>
            <param name="novaInstituicao"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IInstituicaoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Atualiza uma instituição existente
            </summary>
            <param name="id"></param>
            <param name="instituicaoAtualizada"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IInstituicaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma instituição
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.Listar">
            <summary>
            Lista todas as presenças
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma presença por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.ListarMinhas(System.Int32)">
            <summary>
            Lista todos os eventos que um determinado usuário participa
            </summary>
            <param name="id">ID do usuário que participa dos eventos listados</param>
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.Inscrever(Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Cria uma nova presença
            </summary>
            <param name="inscricao">Objeto com as informações da inscrição</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.AprovarRecusar(System.Int32,System.String)">
            <summary>
            Altera o status de uma presença
            </summary>
            <param name="id">ID da presença que terá a situação alterada</param>
            <param name="status">Parâmetro que atualiza o situação da presença para Confirmada, Não confirmada ou Recusada</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.Convidar(Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Convida outro usuário para um evento
            </summary>
            <param name="convite">Objeto com as informações do convite</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IPresencaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma presenca
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.Listar">
            <summary>
            Lista Todos os tipos de eventos
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de evento por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Cadastra um tipo de evento
            </summary>
            <param name="novoTipoEvento"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id"></param>
            <param name="tipoEventoAtualizado"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de evento
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoEventoRepository.ListarComEvento">
            <summary>
            Lista todos os tipos evento com as informações dos eventos
            </summary>
            <returns>Uma lista de tipos evento com os eventos</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.Listar">
            <summary>
            Lista todos os tipos usuarios
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo usuário por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.Cadastrar(Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Cadastra um tipo usuário
            </summary>
            <param name="novoTipoUsuario"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Atualiza um tipo usuário existente
            </summary>
            <param name="id"></param>
            <param name="tipoUsuarioAtualizado"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo usuário
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.ITipoUsuarioRepository.ListarComUsuario">
            <summary>
            Lista todos os tipos usuario com as informações dos usuarios
            </summary>
            <returns>Uma lista de tipos usuario com os usuarios</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuário por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Cadastra um usuário
            </summary>
            <param name="novoUsuario"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id"></param>
            <param name="usuarioAtualizado"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Delets um usuário
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um usuário por email e senha
            </summary>
            <param name="Email"></param>
            <param name="Senha"></param>
            <returns></returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.ListarComTipoUsuario">
            <summary>
            Lista todos os usuarios com as informações dos tipos usuario
            </summary>
            <returns>Uma lista de usuarios com os tipos usuario</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Interfaces.IUsuarioRepository.ListarComPresenca">
            <summary>
            Lista todos os usuarios com as informações das presencas
            </summary>
            <returns>Uma lista de usuarios com as presencas</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.EventoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.EventoRepository.Listar">
            <summary>
            Lista todos os eventos
            </summary>
            <returns>Uma lista de eventos</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.EventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um evento através do ID
            </summary>
            <param name="id">ID do evento que será buscado</param>
            <returns>Um evento buscado</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.EventoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Cadastra um novo evento
            </summary>
            <param name="novoEvento">Objeto com as informações de cadastro</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.EventoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Evento)">
            <summary>
            Atualiza um evento existente
            </summary>
            <param name="id">ID do evento que será atualizado</param>
            <param name="eventoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.EventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um evento existente
            </summary>
            <param name="id">ID do evento que será deletado</param>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.Listar">
            <summary>
            Lista todos as instituicoes
            </summary>
            <returns>Uma lista de instituicoes</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma instituicao através do ID
            </summary>
            <param name="id">ID da instituicao que será buscada</param>
            <returns>Uma instituicao buscada</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Cadastra uma nova instituicao
            </summary>
            <param name="novaInstituicao">Objeto com as informações de cadastro</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Instituicao)">
            <summary>
            Atualiza uma instituicao existente
            </summary>
            <param name="id">ID da instituicao que será atualizado</param>
            <param name="instituicaoAtualizada">Objeto com as novas informações</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.InstituicaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma instituicao existente
            </summary>
            <param name="id">ID da instituicao que será deletada</param>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.PresencaRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.Listar">
            <summary>
            Lista todas as presencas
            </summary>
            <returns>Uma lista de presencas</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma presenca através do ID
            </summary>
            <param name="id">ID da presenca que será buscada</param>
            <returns>Uma presenca buscada</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.ListarMinhas(System.Int32)">
            <summary>
            Lista todos os eventos que um determinado usuário participa
            </summary>
            <param name="id">ID do usuário que participa dos eventos listados</param>
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.Inscrever(Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Cria uma nova presença
            </summary>
            <param name="inscricao">Objeto com as informações da inscrição</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.AprovarRecusar(System.Int32,System.String)">
            <summary>
            Altera o status de uma presença
            </summary>
            <param name="id">ID da presença que terá a situação alterada</param>
            <param name="status">Parâmetro que atualiza o situação da presença para Confirmada, Não confirmada ou Recusada</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.Convidar(Senai.Gufi.WebApi.Domains.Presenca)">
            <summary>
            Convida outro usuário para um evento
            </summary>
            <param name="convite">Objeto com as informações do convite</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.PresencaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma presenca existente
            </summary>
            <param name="id">ID da presenca que será deletada</param>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.Listar">
            <summary>
            Lista todos os tipos evento
            </summary>
            <returns>Uma lista de tipos evento</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo evento através do ID
            </summary>
            <param name="id">ID do tipo evento que será buscado</param>
            <returns>Um tipo evento buscado</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.Cadastrar(Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Cadastra um novo tipo evento
            </summary>
            <param name="novoTipoEvento">Objeto com as informações de cadastro</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.TipoEvento)">
            <summary>
            Atualiza um tipo evento existente
            </summary>
            <param name="id">>ID do tipo evento que será atualizado</param>
            <param name="tipoEventoAtualizado">>ID do tipo evento que será atualizado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo evento existente
            </summary>
            <param name="id">ID do tipo evento que será deletado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoEventoRepository.ListarComEvento">
            <summary>
            Lista todos os tipos evento com os eventos
            </summary>
            <returns>Uma lista de tipos evento com os eventos</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.Listar">
            <summary>
            Lista todos os tipos usuario
            </summary>
            <returns>Uma lista de tipos usuario</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo usuario através do ID
            </summary>
            <param name="id">ID do tipo usuario que será buscado</param>
            <returns>Um tipo usuario buscado</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.Cadastrar(Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Cadastra um novo tipo usuario
            </summary>
            <param name="novoTipoUsuario">Objeto com as informações de cadastro</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.TipoUsuario)">
            <summary>
            Atualiza um tipo usuario existente
            </summary>
            <param name="id">>ID do tipo usuario que será atualizado</param>
            <param name="tipoUsuarioAtualizado">>ID do tipo usuario que será atualizado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo usuario existente
            </summary>
            <param name="id">ID do tipo usuario que será deletado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.TipoUsuarioRepository.ListarComUsuario">
            <summary>
            Lista todos os tipos usuario com os usuarios
            </summary>
            <returns>Uma lista de tipos usuario com os usuarios</returns>
        </member>
        <member name="F:Senai.Gufi.WebApi.Repositories.UsuarioRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.Listar">
            <summary>
            Lista todos os usuarios
            </summary>
            <returns>Uma lista de usuarios</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuario através do ID
            </summary>
            <param name="id">ID do usuario que será buscado</param>
            <returns>Um usuario buscado</returns>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.Cadastrar(Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="novoUsuario">Objeto com as informações de cadastro</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.Atualizar(System.Int32,Senai.Gufi.WebApi.Domains.Usuario)">
            <summary>
            Atualiza um usuario existente
            </summary>
            <param name="id">ID do usuario que será atualizado</param>
            <param name="usuarioAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuario existente
            </summary>
            <param name="id">ID do usuario que será deletado</param>
        </member>
        <member name="M:Senai.Gufi.WebApi.Repositories.UsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um usuario pelo email e senha
            </summary>
            <param name="Email"></param>
            <param name="Senha"></param>
            <returns>O usuarrio buscado</returns>
        </member>
    </members>
</doc>
